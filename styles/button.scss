@use 'sass:color';

.btn {
    border: none;
    outline: none;
    background: none;
    padding: .5rem 1rem;
    text-align: center;
    font-size: 0.875rem;
    font-style: normal;
    font-weight: 500;
    line-height: normal;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: .5rem;

    &:hover,
    &.hover,
    &:focus {
        cursor: pointer;
    }
}

$colors : ("default": ("text": #3F3F3F,
        "back": #E0E0E0,
        "shadow": rgba(51, 51, 51, 0.20),
        "hover-back": #AEAEAE),
    "primary": ("text": #fff,
        "back": #2962FF,
        "shadow": rgba(41, 98, 255, 0.20),
        "hover-back": #0039CB),
    "secondary": ("text": #fff,
        "back": #455A64,
        "shadow": rgba(69, 90, 100, 0.20),
        "hover-back": #1C313A),
    "danger": ("text": #fff,
        "back": #D32F2F,
        "shadow": rgba(211, 47, 47, 0.20),
        "hover-back": #9A0007),

);
$variants : ("normal", "outline", "text");

.btn {
    border-radius: 0.375rem;
    background: #E0E0E0;
    box-shadow: 0px 2px 3px 0px rgba(51, 51, 51, 0.20);

    color: #3F3F3F;


    &:hover,
    &.hover,
    &:focus {
        color: #3F3F3F;

        background: #AEAEAE;
        box-shadow: 0px 2px 3px 0px rgba(51, 51, 51, 0.20);

        cursor: pointer;
    }


}

@each $vari,
$color-list in $colors {

    .#{$vari} {
        background: map-get($color-list, "back");
        box-shadow: 0px 2px 3px 0px map-get($color-list, "shadow");
        color: map-get($color-list, "text");

        &:focus,
        &:hover {
            background: map-get($color-list, "hover-back");
            color: map-get($color-list, "text");

        }
    }
}

//for outline
@each $vari,
$color-list in $colors {

    .#{$vari}-outline {
        background: none;
        color: map-get($color-list, "back");
        border: 1px solid map-get($color-list, "back");
        box-shadow: none;

        @if($vari)=='default' {
            color: #3F3F3F;
            border-color: #3F3F3F;
        }

        &:focus,
        &:hover {
            $back-color: map-get($color-list, "hover-back");
            $new-color: color.adjust($back-color, $alpha: -.7);
            background-color: $new-color;
            // color: map-get($color-list, "text");
            box-shadow: none;

        }
    }
}

//text 
@each $vari,
$color-list in $colors {

    .#{$vari}-text {
        background: none;
        color: map-get($color-list, "back");
        border: none;
        box-shadow: none;

        @if($vari)=='default' {
            color: #3F3F3F;
        }

        &:focus,
        &:hover {
            $back-color: map-get($color-list, "hover-back");
            $new-color: color.adjust($back-color, $alpha: -.7);
            background-color: $new-color;
            // color: map-get($color-list, "text");
            box-shadow: none;

        }
    }
}

.text {
    color: #3D5AFE;


    &:hover,
    &.hover,
    &:focus {
        border-radius: 0.375rem;
        background: rgba(41, 98, 255, 0.10);
        color: #3D5AFE;

    }
}

.disabled {

    &:disabled,
    forceDisabled {
        color: #9E9E9E;
        background: #E0E0E0;
        box-shadow: none;
        border: none;
        cursor: auto;
    }

    &.text:disabled {
        background: none;

    }
}

.sm {
    padding: 6px 12px
}

.md {
    padding: 8px 16px;
}

.lg {
    padding: 11px 22px;
}

//colors 